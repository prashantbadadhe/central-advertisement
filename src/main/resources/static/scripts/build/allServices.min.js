/*! redixile 2018-09-11 */

"use strict";myApp.factory("branchCodeService",["$http","$q",function(n,r){return{getBranches:function(){return n.get("/api/branches?projection=branchview").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching branch"),r.reject(e)})},updateActivationCode:function(e){return n.put("branch/updateActivationCode",e).then(function(e){return e},function(e){return console.log(e),console.error("Error while updating branch code"),r.reject(e)})}}}]),myApp.factory("branchService",["$http","$q",function(n,r){return{getBranches:function(){return n.get("/api/branches?projection=branchview").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching branch"),r.reject(e)})},createBranch:function(e){return n.post("branch",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},updateBranch:function(e){return console.log(e),n.put("branch",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},deleteBranch:function(e){return n.delete(e._links.self.href).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},getCompanies:function(){return n.get("api/companies?projection=companyname").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching company"),r.reject(e)})}}}]),myApp.factory("companyService",["$http","$q",function(n,r){return{getCompanies:function(){return n.get("api/companies").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching company"),r.reject(e)})},createCompany:function(e){return n.post("api/companies",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},updateCompany:function(e){return console.log(e),n.put(e._links.self.href,e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},deleteCompnay:function(e){return n.delete(e._links.self.href).then(function(e){return e},function(e){return console.log(e),r.reject(e)})}}}]),myApp.factory("dashboardService",["$http","$q",function(r,t){return{getDashboard:function(e,n){return r.get("dashboard").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching countrys"),t.reject(e)})},getBranchDetails:function(e,n){return r.get("api/branches").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching countrys"),t.reject(e)})},getDepartmentDetails:function(e,n){return r.get("api/departments").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching departements"),t.reject(e)})}}}]),myApp.factory("indexService",["$http","$q",function(e,n){return{getMenuDetails:function(){return e.get("/menuList").then(function(e){return e.data},function(e){return console.log(e),console.error("Error while fetching branch"),n.reject(e)})}}}]),myApp.factory("loginService",["$http","$q",function(t,o){return{authenticate:function(e,n){var r=e?{authorization:"Basic "+btoa(e.username+":"+e.password)}:{};return t.get("users",{headers:r}).then(function(e){return e.data},function(e){return o.reject(e)})},registerNewUser:function(e){return t.post("users",e).then(function(e){return e},function(e){return o.reject(e)})}}}]),myApp.factory("roleService",["$http","$q",function(n,r){return{getRoles:function(){return n.get("api/roles").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching role"),r.reject(e)})},createRole:function(e){return n.post("api/roles",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},updateRole:function(e){return console.log(e),n.put(e._links.self.href,e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},deleteRole:function(e){return n.delete(e._links.self.href).then(function(e){return e},function(e){return console.log(e),r.reject(e)})}}}]),myApp.factory("uploadFileService",["$http","$q",function(o,c){return{uploadFiles:function(e){var n={transformRequest:angular.identity,transformResponse:angular.identity,headers:{"Content-Type":void 0}};return o.post("/upload/mulitplefiles",e,n).then(function(e){return e},function(e){return console.log(e),console.error("Error mulitplefiles upload"),c.reject(e)})},getBranches:function(){return o.get("/api/branches?projection=branchview").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching branch"),c.reject(e)})},getAllFiles:function(e,n){if(null!=e||null!=e)return o.get("/load/getAllFiles/"+e).then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching branch"),c.reject(e)})},updateContent:function(e,n){var r={transformRequest:angular.identity,transformResponse:angular.identity,headers:{"Content-Type":void 0}},t=JSON.stringify(e);return o.put("/update/contentDetails/"+n,t,r).then(function(e){return e},function(e){return console.log(e),c.reject(e)})}}}]),myApp.factory("userService",["$http","$q",function(n,r){return{getUsers:function(){return n.get("/api/users?projection=userview").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching user"),r.reject(e)})},createUser:function(e){return n.post("/users",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},updateUser:function(e){return console.log(e),n.put("/users",e).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},deleteUser:function(e){return n.delete(e._links.self.href).then(function(e){return e},function(e){return console.log(e),r.reject(e)})},getRoles:function(){return n.get("api/roles?projection=rolename").then(function(e){return e},function(e){return console.log(e),console.error("Error while fetching roles"),r.reject(e)})}}}]);